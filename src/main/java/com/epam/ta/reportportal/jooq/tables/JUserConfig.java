/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables;

import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.JPublic;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.tables.records.JUserConfigRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JUserConfig extends TableImpl<JUserConfigRecord> {

    private static final long serialVersionUID = 484251811;

    /**
     * The reference instance of <code>public.user_config</code>
     */
    public static final JUserConfig USER_CONFIG = new JUserConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JUserConfigRecord> getRecordType() {
        return JUserConfigRecord.class;
    }

    /**
     * The column <code>public.user_config.id</code>.
     */
    public final TableField<JUserConfigRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('user_config_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.user_config.user_id</code>.
     */
    public final TableField<JUserConfigRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.user_config.project_id</code>.
     */
    public final TableField<JUserConfigRecord, Long> PROJECT_ID = createField("project_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.user_config.proposedrole</code>.
     */
    public final TableField<JUserConfigRecord, String> PROPOSEDROLE = createField("proposedrole", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.user_config.projectrole</code>.
     */
    public final TableField<JUserConfigRecord, String> PROJECTROLE = createField("projectrole", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>public.user_config</code> table reference
     */
    public JUserConfig() {
        this(DSL.name("user_config"), null);
    }

    /**
     * Create an aliased <code>public.user_config</code> table reference
     */
    public JUserConfig(String alias) {
        this(DSL.name(alias), USER_CONFIG);
    }

    /**
     * Create an aliased <code>public.user_config</code> table reference
     */
    public JUserConfig(Name alias) {
        this(alias, USER_CONFIG);
    }

    private JUserConfig(Name alias, Table<JUserConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private JUserConfig(Name alias, Table<JUserConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JUserConfig(Table<O> child, ForeignKey<O, JUserConfigRecord> key) {
        super(child, key, USER_CONFIG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_CONFIG_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JUserConfigRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JUserConfigRecord> getPrimaryKey() {
        return Keys.USER_CONFIG_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JUserConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<JUserConfigRecord>>asList(Keys.USER_CONFIG_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JUserConfigRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JUserConfigRecord, ?>>asList(Keys.USER_CONFIG__USER_CONFIG_USER_ID_FKEY, Keys.USER_CONFIG__USER_CONFIG_PROJECT_ID_FKEY);
    }

    public JUsers users() {
        return new JUsers(this, Keys.USER_CONFIG__USER_CONFIG_USER_ID_FKEY);
    }

    public JProject project() {
        return new JProject(this, Keys.USER_CONFIG__USER_CONFIG_PROJECT_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JUserConfig as(String alias) {
        return new JUserConfig(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JUserConfig as(Name alias) {
        return new JUserConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JUserConfig rename(String name) {
        return new JUserConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JUserConfig rename(Name name) {
        return new JUserConfig(name, null);
    }
}
